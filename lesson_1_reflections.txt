How did viewing a diff between two versions of a file help you see the bug that was introduced?

Because the diff tool showed only lines which were different, saving a lot of searching.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

You can see what went right, what went wrong and how things were achieved in the past (not always easy to remember!)

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

Pros: You get to choose when to commit, which lets you manage the steps in the development process as you choose.

Cons: You might not remember to commit, resulting in changes which are too large.:w

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because in a VCS you're tracking changes to the overall thing you're creating, which will likely include multiple files. In Google Docs, the file -is- the thing you're creating, so saving only that file makes sense.

How can you use the commands git log and git diff to view the history of files?

Git log shows the commits, then git diff shows the differences between two of them, specified by their IDs.

How might using version control make you more confident to make changes that could break something?
Because you can always undo the changes you make.

Now that you have your workspace set up, what do you want to try using Git for?
Learning GutHub and maybe filling in some gaps in my Git-fu along the way.
